@model ModelsSGH.TreatmentUnitDTO

@{
    Layout = null;
}

@using (Html.BeginForm("Add", "TreatmentUnit", FormMethod.Post, new { id = "formTU", enctype = "multipart/form-data", @class = "form-horizontal"}))
{
    @Html.AntiForgeryToken()
    @*@Html.ValidationSummary(true)*@

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal">
        @*<div class="form-group">
            @Html.LabelFor(model => model.Cod_Tu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cod_Tu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cod_Tu, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Addrress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Addrress, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.Addrress, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control latitude" } })
                @*@Html.ValidationMessageFor(model => model.Latitude,"", new { @class = "text-danger " })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control longitude" } })
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger " })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            <button id="btnSalvarTu" class="btn btn-primary" type="button">Guardar</button>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/personal/TreatmentUnitUtils.js"></script>
@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

