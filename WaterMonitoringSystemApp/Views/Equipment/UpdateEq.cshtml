@model ModelsSGH.EquipmentDTO

@{
    ViewBag.Title = "UpdateEq";
    Layout = null;
}

@using (Html.BeginForm("UpdateEq", "Equipment", FormMethod.Post, new { id = "formEQ", enctype = "multipar/form-data", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
    <div class="form-horizontal">
        @Html.HiddenFor(model => model.Id_Equipment)
        @Html.HiddenFor(model => model.Cod_Equipment)

        @*<div class="form-group">
            @Html.LabelFor(model => model.Cod_Equipment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cod_Equipment, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.Cod_Equipment, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Id_Tu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Id_Tu, new SelectList(Model.LstUnitTreatment, "Id_Tu", "Cod_Tu", Model.LstUnitTreatment.First().Id_Tu), "Selecione la UT", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id_Tu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            <button id="btnSalvarEq" class="btn btn-primary" type="button">Guardar</button>
        </div>
    </div>
}


@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/personal/EquipmentUtils.js"></script>
